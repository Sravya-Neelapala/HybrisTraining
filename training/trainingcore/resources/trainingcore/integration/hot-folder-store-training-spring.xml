<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:file="http://www.springframework.org/schema/integration/file"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/integration
       http://www.springframework.org/schema/integration/spring-integration.xsd
       http://www.springframework.org/schema/integration/file
       http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <!-- Where our files would be put and scanned -->
    <!-- default : hybris/data/accelerator/import/master -->
    <bean id="baseDirectoryTraining" class="java.lang.String">
        <constructor-arg value="#{baseDirectory}/${tenantId}/training" />
    </bean>

    <!-- 1) Scan for files -->
    <!-- watching files inside the base directory with names matching the pattern specified in filename-regex -->
    <!-- poller: configure trigger to sniff the files -->
    <!-- comparator= fileOrderComparator specifies the order of processing-->
    <file:inbound-channel-adapter id="batchFilesTraining" directory="#{baseDirectoryTraining}"
                                  filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
        <int:poller fixed-rate="1000" />
    </file:inbound-channel-adapter>

    <!-- 2) move the file to processing and setup header -->
    <!-- move the file to processing -->
    <file:outbound-gateway request-channel="batchFilesTraining" reply-channel="batchFilesTrainingProc"
                           directory="#{baseDirectoryTraining}/processing" delete-source-files="true" />

    <!-- feed the flow with relevant information -->
    <int:service-activator input-channel="batchFilesTrainingProc" output-channel="batchFilesHeaderInit"
                           ref="trainingHeaderSetupTask" method="execute" />
    <bean id="trainingHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
        <property name="catalog" value="trainingProductCatalog" />
        <property name="net" value="false" />
        <property name="storeBaseDirectory" ref="baseDirectoryTraining" />
    </bean>

    <!-- Transformer converter mapping -->
    <bean id="batchTrainingProductConverterMapping"
          class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
          p:mapping="ebook"
          p:converter-ref="batchTrainingProductConverter"></bean>

    <bean id="batchTrainingProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
        <property name="header">
            <value>
                INSERT_UPDATE Training; title[unique=true];lct;duration
            </value>
        </property>
        <property name="impexRow">
            <value>;{+0};{1};{2}</value>
        </property>
    </bean>
</beans>